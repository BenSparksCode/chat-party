{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","analytics","props","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","message","id","ref","onSubmit","value","onChange","target","type","ChatMessage","messageClass","src","alt","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAaAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAqBdC,GApBKX,IAASY,YAoBL,SAACC,GAOrB,OACE,mCACE,wBAAQC,UAAU,UAAUC,QAPP,WACvB,IAAMC,EAAW,IAAIhB,IAASS,KAAKQ,mBACnCR,EAAKS,gBAAgBF,IAKnB,qCAMOG,EAAU,SAACN,GACtB,OAAOJ,EAAKW,aACV,wBAAQL,QAAS,kBAAMN,EAAKY,WAA5B,uBAISC,EAAW,WAEtB,IAAMC,EAAQC,mBAERC,EAAcf,EAAUgB,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IALzB,EAOTC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAPqB,sBASMC,mBAAS,IATf,mBASrBC,EATqB,KASVC,EATU,KAWtBC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGM9B,EAAKW,YAAtBoB,EAHW,EAGXA,IAAKC,EAHM,EAGNA,SACMP,EAClBC,EAAa,IALK,SAOZV,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW5C,IAASU,UAAUmC,WAAWC,kBACzCN,MACAC,aAXgB,OAclBlB,EAAMwB,QAAQC,eAAe,CAACC,SAAU,WAdtB,2CAAH,sDAiBjB,OACE,qCACE,iCACGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0BC,QAASD,GAAjBA,EAAIE,OACvD,qBAAKC,IAAK/B,OAEZ,uBAAMgC,SAAUnB,EAAhB,UAEE,uBAAOoB,MAAOtB,EAAWuB,SAAU,SAACpB,GAAD,OAAOF,EAAaE,EAAEqB,OAAOF,UAChE,wBAAQG,KAAK,SAAb,iCAOKC,EAAc,SAAC/C,GAAW,IAAD,EAEJA,EAAMuC,QAA9BT,EAF4B,EAE5BA,KAAMH,EAFsB,EAEtBA,IAAKC,EAFiB,EAEjBA,SAEboB,EAAerB,IAAQ/B,EAAKW,YAAYoB,IAAM,OAAS,WAE7D,OACE,sBAAK1B,UAAS,kBAAa+C,GAA3B,UACE,qBAAKC,IAAKrB,EAAUsB,IAAI,iBACxB,4BAAIpB,QAMKqB,EAjGH,WAAO,IAAD,EAEDC,YAAaxD,GAArByD,EAFS,oBAIhB,OACE,sBAAKpD,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,sEACA,cAAC,EAAD,OAEF,kCACGoD,EAAO,cAAC,EAAD,IAAe,cAAC,EAAD,UClC/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f3b5054.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport './App.css'\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\n// const API_KEY = process.env.REACT_APP_FIREBASE_API\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyD-TU4RtQ5W-c0Xy8HTxrBqNhdygUPvoL8\",\n  authDomain: \"chat-party-60343.firebaseapp.com\",\n  projectId: \"chat-party-60343\",\n  storageBucket: \"chat-party-60343.appspot.com\",\n  messagingSenderId: \"701818781895\",\n  appId: \"1:701818781895:web:b930924389c7381e357ee2\",\n  measurementId: \"G-1ZJTWFQ7W0\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nconst App = () => {\n\n  const [user] = useAuthState(auth)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>ðŸŽ‰ Chat Party ðŸŽ‰</h1>\n        <SignOut />\n      </header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nexport const SignIn = (props) => {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    auth.signInWithPopup(provider)\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      {/* <p>Do not violate the community guidelines or you will be banned for life!</p> */}\n    </>\n  )\n}\n\nexport const SignOut = (props) => {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nexport const ChatRoom = () => {\n\n  const dummy = useRef()\n\n  const messagesRef = firestore.collection('messages')\n  const query = messagesRef.orderBy('createdAt').limit(50)\n\n  const [messages] = useCollectionData(query, { idField: 'id' })\n\n  const [formValue, setFormValue] = useState(\"\")\n\n  const sendMessage = async (e) => {\n    e.preventDefault()\n\n    const {uid, photoURL} = auth.currentUser\n    const tempText  = formValue\n    setFormValue('')\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    dummy.current.scrollIntoView({behavior: 'smooth'})\n  }\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy}></div>\n      </main>\n      <form onSubmit={sendMessage}>\n\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n        <button type='submit'>ðŸ’¬</button>\n\n      </form>\n    </>\n  )\n}\n\nexport const ChatMessage = (props) => {\n\n  const { text, uid, photoURL } = props.message\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'recieved';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"Profile pic.\"/>\n      <p>{text}</p>\n    </div>\n  )\n}\n\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}